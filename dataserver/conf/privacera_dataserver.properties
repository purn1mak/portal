#
# CONFIGURATION used by Privacera DataServer
#

#
# Authentication Key to be used between dataserver and AWS S3 service.
# If you are using IAM Instance Roles, then leave this empty
#
dataserver2s3.apiKey    = AKIA4WAFKQS2SJTRY2WF
dataserver2s3.secretKey = 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

#
# Default region. If it is empty, it will use us-east-1
#
aws.default.region = us-east-1

# To use Privacea portal as a token server
dataserver.use.cloudAccessMgr=true
dataserver.portal.baseurl=http://portal-1:6868

#
# HTTP/HTTPS Protocol handler
#
dataserver.http.hostname =
dataserver.http.port = 8181

dataserver.https.hostname =
dataserver.https.port = 8282

#
# HTTP/HTTPS Tunnel used by secured AWS Cli access
#
dataserver.httptunnel.hostname =
dataserver.httptunnel.port = 9191

dataserver.httpstunnel.hostname =
dataserver.httpstunnel.port = 9292

#
# Hostname associated with endpoint hosting
#
dataserver.endpoint.hostname = 127.0.0.1


#
# Hadoop Credential Provider Path to be used for authentication between dataserver and AWS S3 service
#
dataserver2s3.credential.provider.path =

#
# SSL Parameters
#
dataserver.https.sslcontext.algorithm = TLSv1.2
https.keystore.file = conf/dataserver.jks
https.keystore.type = PKCS12
https.keystore.alias = selfsigned
https.keystore.password = dataserver
https.keyManagerFactory.type = SunX509


#
# Key used to generate Token for DataServer authentication
#
tokensigner.keystore.file = conf/tokensigner.jks
tokensigner.keystore.type = PKCS12
tokensigner.keystore.alias = tokensigner
tokensigner.keystore.password = tokensigner
tokensigner.mac.algorithm = HmacSHA256

#
# Authentication Sources for user to authenticate with their AccessKey/LDAP user/AD user ....
# Upon successful authentication, they will get a secretkey prefixed with DS/ for using it in dataserver.
# 
#

# authentication.sources = aws, myLDAP, myAD # This could be any number of authentication sources ...
authentication.sources = aws

#
# For LDAP authentication parameters
#

# myLDAP.ldap.url=ldap://127.0.0.1:389
# myLDAP.ldap.user.searchfilter=(uid={0})
# myLDAP.ldap.user.dnpattern=cn=Manager,dc=privacera,dc=com
# myLDAP.ldap.referral=follow
# myLDAP.ldap.bind.dn=cn=Manager,dc=privacera,dc=com
# myLDAP.ldap.bind.password=*****
# myLDAP.ldap.base.dn=dc=privacera,dc=com

#
# For Active Directory authentication parameters
#

# myAD.ad.url = ldaps://localhost:636
# myAD.ad.user.searchfilter=(sAMAccountName={0})
# myAD.ad.referral=follow
# myAD.ad.bind.dn=admin@example.com
# myAD.ad.bind.password=adminpassword
# myAD.ad.base.dn=dc=ad,dc=example,dc=com

#
# Please do not modify the following configuration - 
# unless you know what you are doing!
#

#
# DataServer - webservice configuration
#

dataserver.storage = S3
dataserver.contextPath = /
dataserver.hostName = localhost
dataserver.http.shutdownPort = 6185
dataserver.shutdownCommand = SHUTDOWN
dataserver.homedir = /var/tmp/dataserver
#
# This will help to convert AWS accesskey into their respective username before doing access check with ranger.
#
dataserver.useUserNameForAuthorization = true

# comma separated users those have permission to impersonate proxyUser
dataserver.superusers=livy,zeppelin,yarn,spark

# Athena requires S3 to store query output and to read data
# There are tow ways to authenticate s3 bucket permission
# Through S3 Policy or Athena Def
dataserver.athena.s3.uses3policy=true
# Athena requires S3 path uri to store the results of query we fire
# to get metadata or other internal queries which gets fired
dataserver.athena.results.storage.url=

# Specify the AWS Services to Enable Ranger Auth for those services
# s3,athena,dynamodb,glue,kinesis,lambda,adls
dataserver.aws.services=s3,athena,dynamodb,glue,kinesis,lambda,adls

dataserver.ranger.group.pollIntervalMs=300000
dataserver.ranger.username=admin
dataserver.ranger.password=welcome1

# Dataserver mode - AWS or AZURE
dataserver.cloud.provider = AWS
dataserver.azure.tenantid = 

# Specify SSL Certificate for DS to communicate to portal
dataserver.ssl.key-store =
dataserver.ssl.key-store-password =


#by default enable cloudAccessMgr 
dataserver.use.cloudAccessMgr=true
dataserver.portal.baseurl=http://portal-1:6868


